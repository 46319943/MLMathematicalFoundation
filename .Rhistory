sd(c(1, 10, 6, 9, 2, 5, 6, 6, 5, 10))
IQR(c(5, 7, 2, 1, 3, 4, 8, 8, 6, 6))
IQR(c(1,2,3,4,5))
IQR(c(1,2,3,4))
IQR(c(1,2,3,4,5))
IQR(c(3, 5, 5, 6, 7.5, 6, 5, 1, 10, 4))
mean(c(3, 5, 5, 6, 7.5, 6, 5, 1, 10, 4))
5.25 + 1.5 * 1.75
5.25 - 1.5 * 1.75
mid(c(3, 5, 5, 6, 7.5, 6, 5, 1, 10, 4))
median(c(3, 5, 5, 6, 7.5, 6, 5, 1, 10, 4))
5 - 1.5 * 1.75
5 + 1.5 * 1.75
mean(c(12, 10, 11, 12, 11, 14, 15, 18, 21, 11))
sd(c(12, 10, 11, 12, 11, 14, 15, 18, 21, 11))
IQR(c(3, 5, 5, 6, 7.5, 6, 5, 1, 10, 4), 2)
IQR(c(3, 5, 5, 6, 7.5, 6, 5, 1, 10, 4), 5)
IQR(c(3, 5, 5, 6, 7.5, 6, 5, 1, 10, 4), 4)
IQR(c(3, 5, 5, 6, 7.5, 6, 5, 1, 10, 4), 3)
a <- c(2, 4, 1.5, 2, 3)
b <- c(7, 3, 8, 8, 6)
r(a, b)
cor(a, b)
1 - 0.7 * 0.7 * 0.4
0.7 * 0.7 * 0.4
13 / 88
16 / (16 + 22)
(50 / 100) * (49 / 99) * (48 / 98) * (47 / 97) * (46 / 96)
(8 + 6) / 36
7 / 36
34 / 50
4 * 0.14 + 5 * 0.35 + 6 * 0.31 + 7 * 0.2
0.03 + 2 * 0.02
(0 - 0.07) ^ 2 * 0.95 + (1 - 0.07)^2 * 0.03 + (2 - 0.07)^2 * 0.02
(420 - 240) / 90
0.48 ^ 3 * 0.52 * 4
0.9 ^ 20
0.71 ^ 20
pbinom(7,12,0.25)
pbinom(7,12,0.25,lower.tail = FALSE)
?pnorm
dnorm(0, 0, 1)
pnorm(0,10,5)
pbinom(7,12,0.2,lower.tail = FALSE)
sqrt((0.2 * 0.8) / 400)
qnorm(0.025)
0.8 / sqrt(150)
0.8 / sqrt(150) * 2
0.5 / sqrt(150) * 2
0.8 / sqrt(150) * 2
0.5 / sqrt(150) * 2
sqrt((0.77 * 0.24) / 55)
qnorm(0.005)
sqrt((0.77 * 0.24) / 55) * 2.57
sqrt((0.77 * 0.24) / 55) * 2.575
0.5 / sqrt(88)
0.5 / sqrt(88)
pnorm(0.05)
pt(0.05, 88)
pt(0.05,88)
pt(0,88)
qt(0.05,88)
0.5 / sqrt(88)
0.0533 * 1.66
qnorm(0.05)
0.25 * 1.64 / 0.01
0.25 * 1.64^2 / 0.01
0.25 * 1.64^2 / 0.01
qnorm(0.05)
0.25 * 1.6448^2 / 0.01
3 / sqrt(40)
tq(0.025)
qt(0.025)
qt(0.025, 39)
0.474 * 2.02
100000 / sqrt(81)
qt(0.05, 80)
11111.11 * 1.664
qt(0.025, 80)
11111.11 * 1.99
sqrt(0.86 * 0.14 / 900)
qnorm(0.025)
0.01156 * 1.95
0.56 + 0.46 + 0.33 + 0.2 + 0.15 + 0.12
(1 - 1.82)^2 * 0.56 + (2 - 1.82)^2 * 0.23 + (3 - 1.82)^2 * 0.11 + (4 - 1.82)^2 * 0.05 + (5 - 1.82)^2 * 0.03 + (6 - 1.82)^2 * 0.02
sqrt(1.4276)
sqrt((0.23 * 0.77) / 312)
qnorm(0.1)
0.023824 * 1.281
0.09 / 0.48
0.25 * 0.25 * 0.75 * 0.75* 6
pnorm(14, 12.3, 3.11)
8 / sqrt(61)
qnorm(0.05)
1.024295 * 1.6448
83 - 1.68476
cor(c(1,6,7), c(23,48,41))
qnorm(0.05)
0.5 * 0.5 * 1.6448^2 / 0.03^2
0.5 * 0.5 * 1.644854^2 / 0.03^2
pnorm(0.05)
pnorm(0.05)^2 * 0.5 * 0.5 / 0.03^2
qnorm(0.05)^2 * 0.5*0.5 / 0.03^2
7 / sqrt(81)
qt(0.01,80)
0.7778 * 2.374
sd(c(156,184,172,165))
100000 / sqrt(101)
qt(0,1)
qt(0.1)
qt(0.1,100)
qt(0.05,100)
9950 * 1.29
9950 * 1.66
0.7 / sqrt(56)
8.1 - 8
pt(0.1,55)
pt(-0.1,55)
0.1 / 0.0935
pt(-1.07,55)
pt(-1.07,55,lower.tail = FALSE)
qnorm(0.025)
qnorm(0.5)
qnorm(0.05)
(1 - 1.82)^2 * 0.56 + (2 - 1.82)^2 * 0.23 + (3 - 1.82)^2 * 0.11 + (4 - 1.82)^2 * 0.05 + (5 - 1.82)^2 * 0.03 + (6 - 1.82)^2 * 0.02
sqrt(1.4276)
0.023824 * 1.281
0.09 / 0.48
0.25 * 0.25 * 0.75 * 0.75* 6
pnorm(14, 12.3, 3.11)
1.024295 * 1.6448
cor(c(1,6,7), c(23,48,41))
0.7778 * 2.374
sd(c(156,184,172,165))
pt(-1.07,55,lower.tail = FALSE)
54 / 72
40/51
118/175
78/114
list.files()
pwd()
getwd()
getwd()
plot(cars)
list.dirs()
getwd()
getwd()
source('D:/Document/HousePricing/58com/demo_statistics.R')
getwd()
getwd()
list.files()
getwd()
list.dirs()
list.files()
getwd()
file_list <- list.files()
for(file in file_list){
print(file)
}
file_list <- list.files(pattern = '*.csv')
getwd()
file_list <- list.files(pattern = '*.csv')
for(file in file_list){
print(file)
}
getwd()
file_list <- list.files(pattern = '*.csv')
for(file in file_list){
print(file)
}
file_list <- list.files(pattern = '*.csv')
for(file in file_list){
print(file)
}
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
file_csv <- read.csv(file_name)
}
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
print(file_name)
file_csv <- read.csv(file_name, encoding = 'gbk')
}
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
print(file_name)
file_csv <- read.csv(file_name, encoding = 'utf-8')
}
getwd()
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
print(file_name)
file_csv <- read.csv(file_name, encoding = 'utf-8')
}
getwd()
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
print(file_name)
file_csv <- read.csv(file_name, encoding = 'utf-8')
}
Sys.setenv(LANG = "en")
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
print(file_name)
file_csv <- read.csv(file_name, encoding = 'utf-8')
}
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
print(file_name)
file_csv <- read.csv(file_name, encoding = 'utf-8')
break
}
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
print(file_name)
file_csv <- read.csv(file_name, encoding = 'UTF-8')
break
}
file_csv
typeof(file_csv)
dim(file_csv)
class(file_csv)
IQR(file_csv$单位房价)
IQR(file_csv$单位房价, na.rm = TRUE)
IQR(file_csv$单位房价, na.rm = 0)
IQR(file_csv$单位房价, na.rm = TRUE)
View(file_csv)
IQR(file_csv$房屋单价, na.rm = TRUE)
getwd()
Sys.setenv(LANG = "en")
plot(cars)
getwd()
Sys.setenv(LANG = "en")
file_list <- list.files(pattern = '*.csv')
for(file_name in file_list){
print(file_name)
file_csv <- read.csv(file_name, encoding = 'UTF-8')
break
}
dbinom(2, 10, 0.56)
dbinom(2, 3, 0.51)
pnorm(32, 24, 4, FALSE)
30 * 50 / (30 * 50 + 70 * 25 )
1 - 0.93 ^ 10
(0.055 * 0.99) / (0.055 * 0.99 + (1 - 0.055) * 0.005)
160 * 0.28
sqrt(160 * 0.28 * 0.72)
pnorm(50, 44.8, 5.68, FASLE)
pnorm(50, 44.8, 5.68, FALSE)
setwd("~/")
setwd("D:\Document\R Studio")
setwd("D:/Document/R Studio")
setwd("D:/Document/R Studio")
install.packages("devtools")
Sys.getenv()
Sys.getenv()
pnorm(1.73)
1 - pnorm(1.73)
pnorm(2.15)
1 - pnorm(2.15)
qnorm(0.95)
qnorm(0.95) * 300 / 25 / 2
(qnorm(0.95) * 300 / 25 / 2) ^ 2
(qnorm(0.95) * 300 / 25) ^ 2
(qnorm(0.975) * 300 / 25) ^ 2
17 / sqrt(35)
(134 - 130) / (17 / sqrt(35))
pnorm((134 - 130) / (17 / sqrt(35)))
pnorm((134 - 130) / (17 / sqrt(35)), lower.tail = TRUE)
pnorm((134 - 130) / (17 / sqrt(35)), lower.tail = FALSE)
pnorm((134 - 130) / (17 / sqrt(35)), lower.tail = FALSE) * 2
qnorm(0.995)
qnorm(0.80)
- 0.5 * log2(0.5)
log2(0.5)
- 0.5 * log2(0.5)
- 0.3 * log2(0.3)
- 0.1 * log2(0.1)
f <- function(x) -x * log2(2)
curve(sigmoid,0,1)
curve(f,0,1)
curve(f,0.1,0.9)
f(0.5)
f(1)
f <- function(x) -x * log2(x)
curve(f,0.1,0.9)
f(0.1)
f(0.3)
x <- seq(0.01, 0.99, by=0.001)
y <- f(x)
library(ggplot2)
df <- data.frame(x, y)
ggplot(df, aes(x,y)) +
geom_line()
f1 <- function(x) f(x) / x
y1 <- f1(x)
ggplot(df, aes(x,y1)) +
geom_line()
f2 <- function(x) f1(x) / log2(1/x)
y2 <- f2(x)
ggplot(df, aes(x,y2)) +
geom_line()
pt(0.5, 17, lower.tail = FALSE)
pnorm(2.5)
1 - pnorm(2.5)
sqrt(3.4^2 / 10 + 2.7^2 / 10)
sqrt(3.4^2 / 10 + 2.7^2 / 11)
(3.4^2 / 10)
3.4^2
sqrt(3.4^2 / 18 + 2.7^2 / 18)
pt(2.485, 25, lower.tail = FALSE)
2 * pt(2.485, 25, lower.tail = FALSE)
295 / 522
295 / 533
p = 0.5534709
p*(1-p) / 144 + p*(1-p)/389
sqrt(0.00235158)
6 + 16 + 4 + 6 + 15 + 3
4 + 3
7 / 50
0.14 * ( 6 + 15 + 3 )
250 * 0.9
225 / 500
p = 0.45
p * (1 - p) / 250
p * (1 - p) / 250 * 2
p * (1 - p) / 250 * 2
sqrt(0.00198)
50 * 0.8 / (50 * 0.8 + 315 * 0.7)
50 * 0.8 / (50 * 0.8 + 315 * 0.3)
pexp(1/3, 3)
pexp(1/3, 3, lower.tail = FALSE)
0.47 - 1.96*sqrt(100*0.47*0.53)
sqrt(100*0.47*0.53)
0.47 - 1.96*sqrt(0.47*0.53/100)
0.47 + 1.96*sqrt(0.47*0.53/100)
2+2.5+4.1+1.8+4
14.4/5
1/2.88
-1.2+0.5+0.8-0.3
0.2^5
0.7^5 / (0.2^5 + 0.7^5)
1 - (0.7^5 / (0.2^5 + 0.7^5))
0.5^4 * 0.4 / (0.5^4 * 0.4 + 0.7^2*0.3^2*0.3 + 0.3^2*0.7^2*0.3)
qnorm(0.975)
10/25
0.6*0.7 / (0.6*0.7 + 0.4*0.5)
0.677 * 2 - (1-0.677) *1
0.677 * 1 - (1-0.677) * 2
0.4/0.6
pbeta(1, 5, 3)
pbeta(0, 5, 3)
z <- rgamma(1000, shape=16.5, rate=6022.9)
sig2 <- 1/z
mu <- rnorm(1000, mean=609.3, sd=sqrt(sig2/27.1))
rnorm(100, mean=609.3, sd=sqrt(sig2/27.1))
sqrt(sig2/27.1)
quantile(x=mu, probs=c(0.025, 0.975))
3 + (30/2)
200+(30-1)/2*403.1 + 0.1*30/(2*30.1)*(622.8-500)^2
(30*622.8 + 0.1*500)/30.1
z <- rgamma(1000, shape=18, rate=6796.437)
sig2 <- 1/z
mu2 <- rnorm(1000, mean=622.392, sd=sqrt(sig2/30.1))
mean( muA > muB )
mean( mu > mu2 )
mean( mu2 > mu )
qnorm(p=0.975, mean=96.17, sd=sqrt(0.042))
x = seq(0, 1, 0.01)
y = dbeta(x, 0.5, 0.5)
plot(x,y)
plot(x,y)
999%70
999 // 70
999 / 70
999 - 70*14
(1000*8)/(1 * 1024*3)*(2^32)
(2^32 * 8) / (1 * 1024*3)
(10000+500)*8 / (1024^2)
(10000 - 500)*8 / 0.18
422222.2 / (1024^2)
0.4026625 * 0.9
2 * 1 / 200000
dgamma(x, 1, 3)
490.5 + 288.5 + 107 - 495
48 * 8 / (5 * 10^(-6))
2^32
x = seq(-2, 15, length=200)
x
x>=0
as.numeric(x >= 0)
0.5*(2 + 1^2) + 0.3*(4 + 2^2) + 1.1^2
0.5*(2 + 1^2) + 0.3*(4 + 2^2) - 1.1^2
4 * (10000 * 2 + 1) * exp(- 1 / 8 * 0.1^2 * 10000)
setwd('C:/Users/PiaoYang/Desktop/MLMathematicalFoundation')
theta = 0.1
d = 8
Ein = 0.008
target = function(n){
return(
theta^2 * (1 - (d + 1) / n) - Ein
)
}
library('nleqslv')
nleqslv(10, target)
err = function(u, v){
return(
exp(u) + exp(2*v) + exp(u*v) + u^2 - 2*u*v + 2*v^2 - 3*u - 2*v
)
}
gradient_u = function(u, v){
return(
exp(u) + v*exp(u*v) + 2*u - 2*v - 3
)
}
gradient_v = function(u, v){
return(
2*exp(2*v) + u*exp(u*v) + 2*u + 4*v - 2
)
}
u0 = 0
v0 = 0
u = u0
v = v0
u_last = u0
v_list = v0
Eta = 0.01
for(i in 1:5){
u = u - Eta*gradient_u(u_last, v_last)
v = v - Eta*gradient_v(u_last, v_last)
u_last = u
v_last = v
}
err(u, v)
err = function(u, v){
return(
exp(u) + exp(2*v) + exp(u*v) + u^2 - 2*u*v + 2*v^2 - 3*u - 2*v
)
}
gradient_u = function(u, v){
return(
exp(u) + v*exp(u*v) + 2*u - 2*v - 3
)
}
gradient_v = function(u, v){
return(
2*exp(2*v) + u*exp(u*v) + 2*u + 4*v - 2
)
}
u0 = 0
v0 = 0
u = u0
v = v0
u_last = u0
v_last = v0
Eta = 0.01
for(i in 1:5){
u = u - Eta*gradient_u(u_last, v_last)
v = v - Eta*gradient_v(u_last, v_last)
u_last = u
v_last = v
}
err(u, v)
